/*

Time Complexity : O(N)  for dövrü n dəfə işləyir
Space Complexity : O(N) Listin uzunluğu n+1 qədərdir.

Bottom Up DP Tabbulation
*/



import 'dart:math'; 


class Solution {
  int minCostClimbingStairs(List<int> cost) {
    int n = cost.length;

    List<int> dp = List<int>.filled(n + 1, 0);

    for (int i = 2; i <= n; i++) {
      dp[i] = min(dp[i - 2] + cost[i - 2], dp[i - 1] + cost[i - 1]);
    }
    return dp[n];
  }
}

void main() {
  Solution solution = Solution();
  List<int> cost = [10, 15, 20];

  int result = solution.minCostClimbingStairs(cost);
  print("Minimum cost to climb stairs: $result");


}
