// O(n) time complexity
// O(1) space complexity
class Solution {
  List<int>? twoSum(List<int> numbers, int target) {
    int l = 0;
    int r = numbers.length-1;
    while(numbers[l]+numbers[r] !=target){
      if(numbers[l]+numbers[r]>target){
        r--;
      }
      else{
        l++;
      }

    }
    return[l+1,r+1];
  }
}
void main() {
  Solution solution = Solution();
  List<int> numbers = [2,3,4];
  int target = 6;
  print(solution.twoSum(numbers ,target ));
}


// O(n^2) time complexity
// O(1) space complexity

// class Solution {
//   List<int>? twoSum(List<int> numbers, int target) {
//     int sum = 0;
//     List<int> list = [];
//     for(int i = 0 ; i < numbers.length; i++){
//       for(int j = i+1; j < numbers.length; j++){
//         if(numbers[i]+numbers[j] == target){
//               return [i + 1, j + 1];
//         }
//       }
//     }
   
//   }
// }

