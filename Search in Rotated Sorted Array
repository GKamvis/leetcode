class Solution {
  int? search(List<int> nums, int target) {
    int L = 0;
    int R = nums.length - 1;

    while (L <= R) {
      int mid = L + (R - L) ~/ 2;

      if (nums[mid] == target) return mid;

      if (nums[L] <= nums[mid]) {
        if (nums[L] <= target && target < nums[mid]) {
          R = mid - 1;
        } else {
          L = mid + 1;
        }
      }

      // Sağ yarı sıralıdırsa
      else {
        if (nums[mid] < target && target <= nums[R]) {
          L = mid + 1;
        } else {
          R = mid - 1;
        }
      }
    }
    return -1;
    // for(int i = 0 ; i < nums.length ; i++){
    //   if(target == nums[i]){                                              
    //     return i;
    //   }
    // }
    // return -1;

    // while(L <= R){
    //   if(nums[L]==target ) return L;
    //   if(nums[R]==target ) return R;
    //   if(target > nums[L]){
    //     L++;
    //   }
    //   else{
    //     R--;
    //   }
    // }
    // return -1;
  }
}
void main() {
  Solution solution = Solution();
  int target = 0;
  List<int>  nums = [4,5,6,7,0,1,2];
  print(solution.search( nums, target));
}
